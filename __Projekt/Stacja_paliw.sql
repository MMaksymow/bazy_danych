-- MySQL Script generated by MySQL Workbench
-- Wed Dec 23 15:48:23 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Stacja_paliw
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Stacja_paliw
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Stacja_paliw` DEFAULT CHARACTER SET utf8 ;
USE `Stacja_paliw` ;

-- -----------------------------------------------------
-- Table `Stacja_paliw`.`Pracownicy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Stacja_paliw`.`Pracownicy` (
  `idPracownicy` INT NOT NULL AUTO_INCREMENT,
  `imie` VARCHAR(45) NOT NULL,
  `nazwisko` VARCHAR(45) NOT NULL,
  `adres` VARCHAR(45) NOT NULL,
  `nr_telefonu` VARCHAR(45) NOT NULL,
  `stanowisko` VARCHAR(45) NOT NULL,
  `pensja` INT NOT NULL,
  PRIMARY KEY (`idPracownicy`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Stacja_paliw`.`Towary`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Stacja_paliw`.`Towary` (
  `idTowary` INT NOT NULL,
  `nazwa` VARCHAR(45) NOT NULL,
  `ilosc` INT NOT NULL,
  `cena` INT NOT NULL,
  PRIMARY KEY (`idTowary`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Stacja_paliw`.`Transakcje`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Stacja_paliw`.`Transakcje` (
  `idTransakcje` INT NOT NULL,
  `Pracownicy_idPracownicy` INT NOT NULL,
  `Towary_idTowary` INT NOT NULL,
  `ilosc` INT NOT NULL,
  `cena` INT NOT NULL,
  `data` DATETIME NOT NULL,
  PRIMARY KEY (`idTransakcje`),
  INDEX `fk_Transakcje_Pracownicy_idx` (`Pracownicy_idPracownicy` ASC) VISIBLE,
  INDEX `fk_Transakcje_Towary1_idx` (`Towary_idTowary` ASC) VISIBLE,
  CONSTRAINT `fk_Transakcje_Pracownicy`
    FOREIGN KEY (`Pracownicy_idPracownicy`)
    REFERENCES `Stacja_paliw`.`Pracownicy` (`idPracownicy`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Transakcje_Towary1`
    FOREIGN KEY (`Towary_idTowary`)
    REFERENCES `Stacja_paliw`.`Towary` (`idTowary`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Stacja_paliw`.`Faktury`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Stacja_paliw`.`Faktury` (
  `idFaktury` INT NOT NULL,
  `Transakcje_idTransakcje` INT NOT NULL,
  `nazwa_firmy` VARCHAR(45) NOT NULL,
  `nr_NIP` VARCHAR(45) NOT NULL,
  `imie` VARCHAR(45) NOT NULL,
  `nazwisko` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idFaktury`),
  INDEX `fk_Faktury_Transakcje1_idx` (`Transakcje_idTransakcje` ASC) VISIBLE,
  CONSTRAINT `fk_Faktury_Transakcje1`
    FOREIGN KEY (`Transakcje_idTransakcje`)
    REFERENCES `Stacja_paliw`.`Transakcje` (`idTransakcje`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Stacja_paliw`.`Zamowienia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Stacja_paliw`.`Zamowienia` (
  `idZamowienia` INT NOT NULL AUTO_INCREMENT,
  `Towary_idTowary` INT NOT NULL,
  `ilosc` INT NOT NULL,
  `koszt` INT NOT NULL,
  `data` DATETIME NOT NULL,
  `opis` VARCHAR(45) NULL,
  PRIMARY KEY (`idZamowienia`),
  INDEX `fk_Zamowienia_Towary1_idx` (`Towary_idTowary` ASC) VISIBLE,
  CONSTRAINT `fk_Zamowienia_Towary1`
    FOREIGN KEY (`Towary_idTowary`)
    REFERENCES `Stacja_paliw`.`Towary` (`idTowary`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `Stacja_paliw` ;

-- -----------------------------------------------------
-- procedure zmiana_pensji
-- -----------------------------------------------------

DELIMITER $$
USE `Stacja_paliw`$$
CREATE PROCEDURE `zmiana_pensji` ( IN id INT,zmiana INT)
BEGIN
UPDATE Pracownicy SET pensja = pensja + zmiana WHERE idPracownicy = id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- function ilsoc_transakcji
-- -----------------------------------------------------

DELIMITER $$
USE `Stacja_paliw`$$
CREATE FUNCTION ilsoc_transakcji()
    RETURNS INTEGER
BEGIN
    DECLARE ile INT;
    SELECT COUNT(*) INTO @ile FROM Transakcje;
    RETURN @ile;
END$$

DELIMITER ;
USE `Stacja_paliw`;

DELIMITER $$
USE `Stacja_paliw`$$
CREATE DEFINER = CURRENT_USER TRIGGER `Stacja_paliw`.`Towary_AFTER_UPDATE` AFTER UPDATE ON `Towary` FOR EACH ROW
BEGIN
	IF NEW.`ilosc`=0
    THEN
    DELETE FROM `towary` WHERE `idTowary`=NEW.`idTowary`;
    END IF;
END$$

USE `Stacja_paliw`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`Transakcje_AFTER_INSERT` AFTER INSERT ON `Transakcje` FOR EACH ROW
BEGIN
	SET NEW.`data`=NOW();
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
